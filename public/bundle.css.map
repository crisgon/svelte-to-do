{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/components/TaskList.svelte",
    "../src/components/TaskInput.svelte",
    "../src/components/TaskItem.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import TaskInput from \"./components/TaskInput.svelte\";\n  import TaskList from \"./components/TaskList.svelte\";\n\n  const projectName = \"Svelte To Do\";\n  const src = \"https://avatars2.githubusercontent.com/u/23617963?s=40&v=4\";\n\n  import { onMount } from \"svelte\";\n\n  let taskName = \"\";\n  let taskList = [];\n\n  $: taskName = taskName;\n\n  onMount(() => {\n    getTaskListOnDataBase();\n  });\n\n  async function insertTasksOnDataBase(name) {\n    const taskData = { taskName: name, completed: false };\n    try {\n      const data = await (await fetch(\n        \"https://svelte-todo-61dba.firebaseio.com/tasks.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(taskData),\n          headers: { \"Content-Type\": \"application/json\" }\n        }\n      )).json();\n\n      taskList = [...taskList, { id: data.name, taskName: taskData.taskName }];\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function changeTasksStateOnDataBase(event) {\n    const {\n      detail: { id, completed, name }\n    } = event;\n    const taskData = { taskName: name, completed };\n    try {\n      const data = await (await fetch(\n        `https://svelte-todo-61dba.firebaseio.com/tasks/${id}.json`,\n        {\n          method: \"PATCH\",\n          body: JSON.stringify(taskData),\n          headers: { \"Content-Type\": \"application/json\" }\n        }\n      )).json();\n      const taskIndex = taskList.findIndex(task => task.id === id);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function getTaskListOnDataBase() {\n    try {\n      const data = await (await fetch(\n        \"https://svelte-todo-61dba.firebaseio.com/tasks.json\"\n      )).json();\n\n      Object.keys(data).forEach(id => {\n        taskList = [\n          ...taskList,\n          { id, taskName: data[id].taskName, completed: data[id].completed }\n        ];\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function deleteTaskOnDatabase(event) {\n    const {\n      detail: { id }\n    } = event;\n    try {\n      const data = await fetch(\n        `https://svelte-todo-61dba.firebaseio.com/tasks/${id}.json`,\n        {\n          method: \"DELETE\"\n        }\n      );\n      if (data.ok) {\n        updateTaskListAfterDelete(id);\n      }\n    } catch (error) {}\n  }\n\n  function updateTaskListAfterDelete(id) {\n    taskList = taskList.filter(task => task.id !== id);\n  }\n</script>\n\n<style>\n  .container {\n    width: 100%;\n    max-width: 800px;\n    margin: 0 auto;\n  }\n\n  .header {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .image {\n    text-align: center;\n  }\n</style>\n\n<section class=\"container\">\n  <header class=\"header\">\n    <figure class=\"image\">\n      <img {src} alt=\"Svelte3\" />\n    </figure>\n\n    <h1 class=\"title\">{projectName}</h1>\n    <TaskInput {insertTasksOnDataBase} />\n  </header>\n\n  <TaskList\n    {taskList}\n    deleteTask={deleteTaskOnDatabase}\n    completeTask={changeTasksStateOnDataBase} />\n</section>\n",
    "<script>\n  export let taskList;\n  export let deleteTask;\n  export let completeTask;\n\n  import TaskItem from \"./TaskItem.svelte\";\n</script>\n\n<style>\n  .task-list {\n    padding: 0;\n  }\n</style>\n\n<ul class=\"task-list\">\n  {#each taskList as task (task.id)}\n    <TaskItem\n      id={task.id}\n      name={task.taskName}\n      completed={task.completed}\n      on:delete={e => deleteTask(e)}\n      on:complete={e => completeTask(e)} />\n  {:else}\n    <span>Nothing here...</span>\n  {/each}\n</ul>\n",
    "<script>\n  export let insertTasksOnDataBase;\n\n  let taskName = \"\";\n  let disabledBtn = true;\n\n  $: disabledBtn = taskName.trim().length <= 5;\n\n  function createNewTask(name) {\n    insertTasksOnDataBase(name);\n    taskName = \"\";\n  }\n</script>\n\n<style>\n  .btn {\n    background-color: #ff3e00;\n    color: #fff;\n    cursor: pointer;\n  }\n\n  .btn:disabled {\n    cursor: not-allowed;\n  }\n</style>\n\n<div class=\"task-input\">\n  <input type=\"text\" bind:value={taskName} />\n  <button\n    disabled={disabledBtn}\n    class=\"btn\"\n    on:click={() => createNewTask(taskName)}>\n    create\n  </button>\n\n</div>\n",
    "<script>\n  export let id;\n  export let name;\n  export let completed;\n\n  import { fly } from \"svelte/transition\";\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n</script>\n\n<style>\n  .completed {\n    opacity: 0.3;\n    transition: opacity 0.2s;\n  }\n\n  .completed:hover {\n    opacity: 1;\n  }\n\n  .completed > .task-name {\n    text-decoration: line-through;\n    color: #2ed573;\n  }\n\n  .task {\n    list-style: none;\n    padding: 1rem 0;\n    border-bottom: 1px solid #f1f2f6;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .task-name {\n    width: 750px;\n  }\n\n  .checkbox {\n    margin: 0;\n  }\n\n  .remove {\n    width: 50px;\n    text-align: right;\n    text-decoration: none;\n  }\n\n  .remove:hover {\n    cursor: pointer;\n    color: tomato;\n  }\n</style>\n\n<li\n  class=\"task\"\n  class:completed\n  in:fly={{ x: 50, duration: 800 }}\n  out:fly={{ x: 50, duration: 800 }}>\n  <span class=\"task-name\">{name}</span>\n  <input\n    type=\"checkbox\"\n    bind:checked={completed}\n    class=\"checkbox\"\n    on:change={() => dispatch('complete', { id, name, completed })} />\n  <span\n    role=\"button\"\n    class=\"remove\"\n    on:click={() => dispatch('delete', { id })}>\n    ‚ùå\n  </span>\n</li>\n"
  ],
  "names": [],
  "mappings": "AAgGE,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,MAAM,AACpB,CAAC;ACrGD,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,CAAC,AACZ,CAAC;ACID,IAAI,eAAC,CAAC,AACJ,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,mBAAI,SAAS,AAAC,CAAC,AACb,MAAM,CAAE,WAAW,AACrB,CAAC;ACXD,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,OAAO,CAAC,IAAI,AAC1B,CAAC,AAED,wBAAU,MAAM,AAAC,CAAC,AAChB,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,wBAAU,CAAG,UAAU,cAAC,CAAC,AACvB,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,KAAK,AACd,CAAC,AAED,SAAS,cAAC,CAAC,AACT,MAAM,CAAE,CAAC,AACX,CAAC,AAED,OAAO,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,CACjB,eAAe,CAAE,IAAI,AACvB,CAAC,AAED,qBAAO,MAAM,AAAC,CAAC,AACb,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,MAAM,AACf,CAAC"
}